{"version":3,"sources":["components/home/Movie.js","components/home/Home.js","components/topBar/TopBar.js","components/sessions/MovieDay.js","components/bottom/Bottom.js","components/sessions/Sessions.js","components/reservation/Seat.js","components/reservation/Reservation.js","components/success/Success.js","components/App.js","index.js"],"names":["Movie","img","id","title","ticketOrder","setTicketOrder","to","className","onClick","src","alt","Home","useState","movies","setMovies","useEffect","axios","get","then","res","data","map","movie","posterURL","TopBar","MovieDay","weekday","date","showtimes","showtime","Time","time","name","Bottom","session","Sessions","days","movieInfo","setMovieInfo","idFilme","useParams","Seat","number","isAvailable","seatId","buyerInfo","seatClass","setSeatClass","ids","push","seatNumbers","filter","seatNumber","alert","padStart","Reservation","day","seats","idSessao","cpf","setBuyerInfo","nameInputClass","setNameInputClass","cpfInputClass","setCpfInputClass","getInput","e","target","classList","contains","value","isValidName","isValidCPF","test","isThereASelectedSeat","length","seat","type","placeholder","onChange","post","preventDefault","Success","i","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa7fd161.chunk.js","sourcesContent":["import {Link} from \"react-router-dom\";\n\nexport default function Movie({img, id, title, ticketOrder, setTicketOrder}) {\n    return (\n        <Link to={`/sessoes/${id}`}>\n        <div className=\"movie\" onClick={() => setTicketOrder({...ticketOrder, title: title})}>\n            <img src={img} alt=\"\"/>\n        </div>\n        </Link>\n    );\n}","import \"./home.css\";\nimport Movie from \"./Movie\";\nimport axios from \"axios\";\nimport {useState, useEffect} from \"react\";\n\n\nexport default function Home({ticketOrder, setTicketOrder}) {\n\n    const [movies, setMovies] = useState([]);\n\n    useEffect(\n        () => {\n            axios.get(\"https://mock-api.bootcamp.respondeai.com.br/api/v3/cineflex/movies\").then(\n                res => {\n                    setMovies(res.data);\n                }\n            )\n        }, []\n    );\n    \n\n    return (\n        <div className=\"home\">\n            <div className=\"page-title\">Selecione o filme</div>\n            <div className=\"movies\">\n                {movies.map(movie => <Movie img={movie.posterURL} key={movie.id} id={movie.id} ticketOrder={ticketOrder} setTicketOrder={setTicketOrder} title={movie.title}/>)}\n            </div>\n        </div>\n    );\n}","import \"./topBar.css\";\n\nexport default function TopBar (){\n    return (\n        <div className=\"top-bar\">\n            CINEFLEX\n        </div>\n    );\n}","import { Link } from \"react-router-dom\";\n\nexport default function MovieDay({ weekday, date, showtimes, ticketOrder, setTicketOrder }) {\n    return (\n        <div className=\"movie-day\">\n            <div className=\"day\">\n                {weekday} - {date}\n            </div>\n            <div className=\"times\">\n                {showtimes.map((showtime) => (\n                    <Time time={showtime.name} key={showtime.id} id={showtime.id} date={date} ticketOrder={ticketOrder} setTicketOrder={setTicketOrder}/>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nfunction Time({ time, id, date, ticketOrder, setTicketOrder }) {\n    return (\n        <Link to={`/assentos/${id}`} className=\"link\">\n            <div className=\"time\" onClick={() => setTicketOrder({...ticketOrder, date: date, time: time})}>{time}</div>\n        </Link>\n    );\n}\n","import \"./bottom.css\";\n\nexport default function Bottom({img, title, session}) {\n    return (\n        <div className=\"bottom\">\n            <div className=\"movie-bottom\">\n                <img src={img} alt=\"\" />\n            </div>\n            <div className=\"movie-information\">\n                <span>{title}</span>\n                <span>{session}</span>\n            </div>\n        </div>\n    );\n}\n","import MovieDay from \"./MovieDay\";\nimport Bottom from \"../bottom/Bottom\";\nimport \"./sessions.css\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\n\nexport default function Sessions({ticketOrder, setTicketOrder}) {\n    const [movieInfo, setMovieInfo] = useState({days: []});\n    const { idFilme } = useParams();\n\n    useEffect(() => {\n        axios\n            .get(\n                `https://mock-api.bootcamp.respondeai.com.br/api/v3/cineflex/movies/${idFilme}/showtimes`\n            )\n            .then((res) => {\n                setMovieInfo(res.data);\n            });\n    }, []);\n\n    return (\n        <div className=\"sessions-page\">\n            <div className=\"sessions\">\n                <div className=\"page-title\">Selecione o horário</div>\n                {movieInfo.days.map((session) => (\n                    <MovieDay\n                        weekday={session.weekday}\n                        date={session.date}\n                        showtimes={session.showtimes}\n                        key={session.id}\n                        ticketOrder={ticketOrder}\n                        setTicketOrder={setTicketOrder}\n                    />\n                ))}\n            </div>\n            <Bottom title={movieInfo.title} img={movieInfo.posterURL} />\n        </div>\n    );\n}\n","import { useState } from \"react\";\n\nexport default function Seat({ number, isAvailable, seatId, buyerInfo, ticketOrder }) {\n\n    const [seatClass, setSeatClass] = useState(isAvailable ? \"seat available-color\" : \"seat unavailable-color\");\n\n    function selectSeat() {\n        if(isAvailable){\n            if(seatClass === \"seat available-color\") {\n                setSeatClass(\"seat selected-color\")\n                buyerInfo.ids.push(seatId);\n                ticketOrder.seatNumbers.push(number);\n            }\n            else {\n                setSeatClass(\"seat available-color\")\n                buyerInfo.ids = buyerInfo.ids.filter(id => id !== seatId);\n                ticketOrder.seatNumbers = ticketOrder.seatNumbers.filter(seatNumber => seatNumber !== number);\n            };\n        }\n        else {\n            alert(\"Esse assento não está disponível\");\n        }\n        \n    }\n\n    return (\n        <div className={seatClass} onClick={selectSeat}>\n            {number.padStart(2, \"0\")}\n        </div>\n    );\n}\n","import \"./reservation.css\";\nimport Bottom from \"../bottom/Bottom\";\nimport Seat from \"./Seat\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Reservation({ticketOrder, setTicketOrder}) {\n\n    const [movieInfo, setMovieInfo] = useState({movie: {title: \"\", posterURL: \"\"}, day: {weekday: \",\"},seats: [], name: \"\"});\n    const {idSessao} = useParams();\n    const [buyerInfo, setBuyerInfo] = useState({ids: [], name: \"\", cpf: \"\"});\n    const [nameInputClass, setNameInputClass] = useState([\"name-input\", \"error-message hidden\"]);\n    const [cpfInputClass, setCpfInputClass] = useState([\"cpf-input\", \"error-message hidden\"]);\n\n    useEffect(() => {\n        axios.get(`https://mock-api.bootcamp.respondeai.com.br/api/v3/cineflex/showtimes/${idSessao}/seats`).then(\n            res => {\n                setMovieInfo(res.data);\n            }\n        )\n    }, []);\n\n    function getInput(e) {\n        if(e.target.classList.contains(\"name-input\") ) {\n            setBuyerInfo({...buyerInfo, name: e.target.value});\n            setTicketOrder({...ticketOrder, name: e.target.value});\n        }\n        if(e.target.classList.contains(\"cpf-input\")) {\n            setBuyerInfo({...buyerInfo, cpf: e.target.value});\n            setTicketOrder({...ticketOrder, cpf: e.target.value});\n        }\n    }\n\n    function sendInformation(e) {\n        if(!isValidCPF() || !isValidName() || !isThereASelectedSeat()){\n            e.preventDefault();\n        }\n        else{\n            axios.post(\"https://mock-api.bootcamp.respondeai.com.br/api/v3/cineflex/seats/book-many\", buyerInfo);\n        }\n        if(!isValidName()){\n            setNameInputClass([\"name-input wrong\", \"error-message\"]);\n        }\n        if(!isValidCPF()){\n            setCpfInputClass([\"cpf-input wrong\", \"error-message\"]);\n        }\n        if(!isThereASelectedSeat()){\n            alert(\"Selecione pelo menos um assento\");\n        }\n    }\n\n    function isValidName() {\n        if(buyerInfo.name === \"\") return false;\n        else return true;\n    }\n\n    function isValidCPF() {\n        return /^\\d{3}\\.\\d{3}\\.\\d{3}\\-\\d{2}$/.test(buyerInfo.cpf);\n    }\n\n    function isThereASelectedSeat () {\n        return buyerInfo.ids.length;\n    }\n\n    return (\n        <div className=\"reservation-page\">\n            <div className=\"reservation\">\n                <div className=\"page-title\">Selecione o(s) assento(s)</div>\n                <div className=\"seats\">\n                    {movieInfo.seats.map((seat) => (\n                        <Seat key={seat.id} number={seat.name} isAvailable={seat.isAvailable} seatId={seat.id} buyerInfo={buyerInfo} ticketOrder={ticketOrder}/>\n                    ))}\n                </div>\n                <div className=\"seats-subtitle\">\n                    <div className=\"selected\">\n                        <div className=\"selected-color color\"></div>\n                        Selecionado\n                    </div>\n                    <div className=\"available\">\n                        <div className=\"available-color color\"></div>\n                        Disponível\n                    </div>\n                    <div className=\"unavailable\">\n                        <div className=\"unavailable-color color\"></div>\n                        Indisponível\n                    </div>\n                </div>\n                <div className=\"information\">\n                    <div className=\"name\">\n                        <span className=\"name-span\">Nome do comprador: </span>\n                        <input className={nameInputClass[0]} type=\"text\" placeholder=\"Digite seu nome...\" onChange={(e) => getInput(e)} value={buyerInfo.name}/>\n                        <span className={nameInputClass[1]}>Digite um nome válido</span>\n                    </div>\n                    <div className=\"cpf\">\n                        <span className=\"cpf-span\">CPF do comprador: </span>\n                        <input className={cpfInputClass[0]} type=\"text\" placeholder=\"Digite seu CPF...\" onChange={(e) => getInput(e)} value={buyerInfo.cpf}/>\n                        <span className={cpfInputClass[1]}>Digite o CPF no formato XXX.XXX.XXX-XX</span>\n                    </div>\n                </div>\n                <Link to=\"/sucesso\"><button className=\"reserve-seat\" onClick={sendInformation}>Reservar assento(s)</button></Link>\n            </div>\n            <Bottom title={movieInfo.movie.title} img={movieInfo.movie.posterURL} session={`${movieInfo.day.weekday} - ${movieInfo.name}`}/>\n        </div>\n    );\n}\n\n","import \"./success.css\";\nimport {Link} from \"react-router-dom\";\n\nexport default function Success ({ticketOrder, setTicketOrder}) {\n\n    const {title, date, time, seatNumbers, name, cpf} = ticketOrder;\n\n    function clearOrder() {\n        setTicketOrder({\n            title: \"\",\n            date: \"\",\n            time: \"\",\n            seatNumbers: [],\n            name: \"\",\n            cpf: \"\"\n        })\n    };\n\n    return (\n        <div className=\"success\">\n            <div className=\"page-title\">Pedido feito <br/> com sucesso!</div>\n            <div className=\"movie-and-session\">\n                <p>Filme e sessão</p>\n                <p>{title}</p>\n                <p>{date} {time}</p>\n            </div>\n            <div className=\"tickets\">\n                <p>Ingressos</p>\n                {seatNumbers.map((seatNumber, i) => <p key={i}>Assento {seatNumber}</p>)}\n            </div>\n            <div className=\"buyer\">\n                <p>Comprador</p>\n                <p>Nome: {name}</p>\n                <p>CPF: {cpf}</p>\n            </div>\n            <Link to=\"/\"><button className=\"return-to-home\" onClick={clearOrder}>Voltar para Home</button></Link>\n        </div>\n    );\n}\n\n","import \"../css/reset.css\";\nimport \"../css/style.css\";\nimport Home from \"./home/Home\";\nimport TopBar from \"./topBar/TopBar\";\nimport Sessions from \"./sessions/Sessions\";\nimport Reservation from \"./reservation/Reservation\";\nimport Success from \"./success/Success\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport {useState} from \"react\";\n\nfunction App() {\n\n    const [ticketOrder, setTicketOrder] = useState({\n        title: \"\",\n        date: \"\",\n        time: \"\",\n        seatNumbers: [],\n        name: \"\",\n        cpf: \"\"\n    })\n\n    return (\n        <Router>\n            <TopBar />\n            <Switch>\n                <Route path=\"/sessoes/:idFilme\" exact>\n                    <Sessions ticketOrder={ticketOrder} setTicketOrder={setTicketOrder}/>\n                </Route>\n                <Route path=\"/assentos/:idSessao\" exact>\n                    <Reservation ticketOrder={ticketOrder} setTicketOrder={setTicketOrder}/>\n                </Route>\n                <Route path=\"/sucesso\" exact>\n                    <Success ticketOrder={ticketOrder} setTicketOrder={setTicketOrder}/>\n                </Route>\n                <Route path=\"/\">\n                    <Home ticketOrder={ticketOrder} setTicketOrder={setTicketOrder}/>\n                </Route>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}